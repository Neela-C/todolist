{"version":3,"sources":["stores/TodoModel.js","stores/TodoStore.js","components/todoentry.js","components/todoitem.js","components/todoitems.js","components/todofooter.js","App.js","reportWebVitals.js","index.js"],"names":["TodoModel","store","title","completed","id","this","makeObservable","observable","toggle","action","todos","flag","lastID","addTodo","todosLeft","computed","printable","push","filter","todo","length","console","log","TodoEntry","onToggle","props","state","value","handleKeyDown","event","keyCode","preventDefault","Todostore","setState","className","onChange","target","onKeyDown","type","placeholder","Component","TodoItem","removeTodo","TodoStore","checked","onClick","observer","TodoItems","todoStore","map","TodoFooter","document","getElementById","setAttribute","href","showAll","showActives","showCompleted","clearCompletedTodos","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e0299b1b.chunk.js","sourcesContent":["// import {makeObservable, action} from 'mobx';\r\nimport {makeObservable, observable , action} from 'mobx';\r\n\r\n\r\n\r\nexport default class TodoModel {\r\n    store\r\n    id\r\n    title\r\n    completed\r\n    \r\n    constructor(store ,title, completed, id){\r\n        this.title = title\r\n        this.completed = completed\r\n        this.id = id\r\n        this.store = store\r\n\r\n        makeObservable(this, {\r\n            title: observable,\r\n            completed: observable,\r\n            toggle: action\r\n        })\r\n    \r\n    }\r\n\r\n    toggle() {\r\n        this.completed = !this.completed\r\n    }\r\n    \r\n}","import {makeObservable, observable, action, computed} from 'mobx';\r\n// import {makeObservable, action} from 'mobx';\r\nimport TodoModel from './TodoModel'\r\n\r\nclass TodoStore {\r\n    constructor(){\r\n        this.todos = []\r\n        this.flag = 'all'\r\n        this.lastID = 1\r\n        makeObservable(this, {\r\n            todos: observable,\r\n            addTodo : action,\r\n            flag: observable,\r\n            todosLeft: computed,\r\n            printable: computed\r\n        })\r\n    }\r\n    \r\n    \r\n    addTodo(title){\r\n        this.todos.push(new TodoModel(this, title, false, this.lastID ++))\r\n    }\r\n\r\n\r\n    get todosLeft() {\r\n        return(this.todos.filter(todo => todo.completed === false).length)\r\n    }\r\n\r\n    get printable() {\r\n\r\n        if (this.flag === 'all'){\r\n            return(this.todos)\r\n        } else if (this.flag === 'active') {\r\n            return(this.todos.filter(todo => todo.completed === false))\r\n        } else if (this.flag === 'completed') {\r\n            return(this.todos.filter(todo => todo.completed === true))\r\n        } else {\r\n            console.log('Printable Error')\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nconst store = new TodoStore()\r\nexport default store\r\n","import React, {Component} from 'react';\r\nimport Todostore from '../stores/TodoStore'\r\nclass TodoEntry extends Component {\r\n    onToggle= () => {\r\n        this.props.todo.toggle()\r\n    }\r\n    state = {\r\n        value:''\r\n    };\r\n    handleKeyDown = event =>{\r\n        if(event.keyCode!== 13){\r\n            return;\r\n        }\r\n        event.preventDefault()\r\n        Todostore.addTodo(this.state.value)\r\n        this.setState({\r\n            value: ''\r\n          })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <header className=\"header\">\r\n\t\t\t\t<h1>todo list</h1>\r\n                <input\r\n                    value={this.state.value}\r\n                    onChange={event => this.setState({value: event.target.value})}\r\n                    onKeyDown={\r\n                        event => this.handleKeyDown(event)\r\n                    }\r\n                    type=\"text\"\r\n                    className=\"new-todo\"\r\n                    placeholder=\"What needs to be done?\"\r\n                    />\r\n\t\t\t</header>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoEntry","import React, {Component} from 'react';\r\n\r\nimport {observer} from 'mobx-react'\r\n\r\nimport TodoStore from '../stores/TodoStore'\r\n\r\nclass TodoItem extends Component {\r\n\r\n    onToggle=()=>{\r\n        this.props.todo.toggle()\r\n    }\r\n\r\n    removeTodo = () => {\r\n        TodoStore.todos = TodoStore.todos.filter(todo => todo !== this.props.todo)\r\n      }\r\n      \r\n    render(){\r\n        const {todo} = this.props\r\n        return(\r\n            \r\n\t\t\t\t\r\n            <li className={todo.completed ? 'completed' : ' '}>\r\n            <div className=\"view\">\r\n                <input onChange={this.onToggle} className=\"toggle\" type=\"checkbox\" value=\"on\" checked= {todo.completed}/>\r\n                <label>{todo.title}</label>\r\n                <button className=\"destroy\" onClick={this.removeTodo}></button>\r\n            </div>\r\n            <input className=\"edit\" value=\"Create a TodoMVC template\"/>\r\n            </li>\r\n        \r\n\t\t\t\t\r\n\t\t\t\r\n        )\r\n    }\r\n}\r\n\r\nTodoItem = observer(TodoItem);\r\n\r\nexport default TodoItem","import React, {Component} from 'react';\r\nimport TodoItem from \"./todoitem\";\r\nimport todoStore from '../stores/TodoStore';\r\nimport { observer } from \"mobx-react\";\r\n\r\nclass TodoItems extends Component {\r\n    render(){\r\n        return(\r\n            <section className=\"main\">\r\n\t\t\t<ul className=\"todo-list\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttodoStore.printable.map(todo =>{\r\n\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t<TodoItem todo = {todo} />\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t</ul>\r\n\t\t\t</section>\r\n        )\r\n    }\r\n}\r\n\r\nTodoItems = observer(TodoItems)\r\n\r\nexport default TodoItems","import React, { Component } from \"react\";\r\n\r\nimport TodoItem from \"./todoitem\";\r\nimport todoStore from \"../stores/TodoStore\";\r\n\r\nimport { observer } from \"mobx-react\";\r\n\r\nclass TodoFooter extends Component {\r\n\r\n  clearCompletedTodos() {\r\n    todoStore.todos = todoStore.todos.filter(todo => todo.completed === false)\r\n  }\r\n\r\n  showAll() {\r\n    document.getElementById(\"all\").setAttribute('class', 'selected')\r\n    document.getElementById(\"active\").setAttribute('class', '')\r\n    document.getElementById(\"completed\").setAttribute('class', '')\r\n\r\n    todoStore.flag = 'all'\r\n\r\n\r\n  }\r\n\r\n  showActives() {\r\n    document.getElementById(\"all\").setAttribute('class', '')\r\n    document.getElementById(\"active\").setAttribute('class', 'selected')\r\n    document.getElementById(\"completed\").setAttribute('class', '')\r\n\r\n    todoStore.flag = 'active'\r\n\r\n  }\r\n\r\n  showCompleted() {\r\n    document.getElementById(\"all\").setAttribute('class', '')\r\n    document.getElementById(\"active\").setAttribute('class', '')\r\n    document.getElementById(\"completed\").setAttribute('class', 'selected')\r\n\r\n\r\n    todoStore.flag = 'completed'\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n\r\n        if (todoStore.todos.length === 0) {\r\n            return(\r\n                <div></div>\r\n            )\r\n            \r\n        }\r\n        else {\r\n            return(\r\n                <footer className=\"footer\">\r\n                <span className=\"todo-count\">\r\n                  <strong>{todoStore.todosLeft}</strong> item left\r\n                </span>\r\n        \r\n                <ul className=\"filters\">\r\n                  <li>\r\n                    <a className=\"selected\" id=\"all\" href=\"#/\" onClick={this.showAll}>\r\n                      All\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#/\" id=\"active\" onClick={this.showActives}>\r\n                      Active\r\n                      </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#/\" id=\"completed\" onClick={this.showCompleted}>\r\n                      Completed\r\n                      </a>\r\n                  </li>\r\n                </ul>\r\n        \r\n                <button className=\"clear-completed\"  onClick={this.clearCompletedTodos}>Clear completed</button>\r\n              </footer>\r\n            )\r\n        }\r\n\r\n  }\r\n}\r\n\r\nTodoFooter = observer(TodoFooter);\r\n\r\nexport default TodoFooter;","\nimport './App.css';\nimport {observer} from \"mobx-react\";\nimport TodoEntry from './components/todoentry'\nimport TodoItems from './components/todoitems'\nimport TodoFooter from './components/todofooter'\n\nfunction App() {\n  return (\n    <div  className=\"App\">\n\t\t\n\t\t<div id=\"todoapp\" className=\"todoapp\">\n\t\t    <TodoEntry/>\n      \t<TodoItems/>\n        <TodoFooter />\n\t\t\t</div>\t\n    </div>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}